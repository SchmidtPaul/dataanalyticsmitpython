{"title":"Mathematische Operatoren & Funktionen","markdown":{"yaml":{"title":"Mathematische Operatoren & Funktionen"},"headingText":"Symbolische Operatoren","containsRefs":false,"markdown":"\n\nPython ermöglicht alle grundlegenden mathematischen Berechnungen, die auch auf einem Taschenrechner durchgeführt werden können, mit einer Syntax, die einem z.B. durch Microsoft Excel zumindest teilweise geläufig ist.\n\n\nDie Operatoren für Addition, Subtraktion, Multiplikation und Division sind erwartungsgemäß:\n\n::: {layout-ncol=\"4\"}\n```{python}\n10 + 3\n```\n\n```{python}\n10 - 3\n```\n\n```{python}\n10 * 3\n```\n\n```{python}\n10 / 3\n```\n:::\n\nFür die Potenzierung wird `**` genutzt:\n\n```{python}\n10 ** 3\n```\n\nMathematische Ausdrücke in Python folgen der normalen arithmetischen Reihenfolge der Operationen, also\n\n1.  `**`\n2.  `*` und `/`\n3.  `+` und `-`\n\nEs können aber Klammern eingesetzt werden um eine andere Reihenfolge zu erreichen:\n\n::: {layout-ncol=\"2\"}\n```{python}\n1 + 2 * 3 ** 2\n```\n\n```{python}\n((1 + 2) * 3) ** 2\n```\n:::\n\nDer Vollständigkeit halber soll erwähnt sein, dass es weitere, nicht so gängige Operatoren gibt. Beispielsweise wird mit `//` erst dividiert und dann der Quotient auf die nächste ganze Zahl abgerundet, sodass `10 // 3` = 3. Mit dem Modulus-Operator `%` hingegen wird der Rest, der bei der Division zweier Zahlen entsteht, zurückgegeben, sodass `10 % 4` = 2.\n\n# Mathematische Funktionen\n\nSelbstverständlich ist es auch möglich z.B. den Logarithmus einer Zahl zu berechnet. Allerdings gibt es dafür kein Symbol, sondern eine Funktion. Diese und andere Funktionen sind im Standardmodul `math` enthalten, sodass wir dieses zunächst laden müssen.\n\n```{python}\nimport math # Das math-Modul laden\n```\n\nStandardmäßig wird der natürliche Logarithmus von 100 berechnet, wobei die Basis des Logarithmus die [Euler'sche Zahl](https://www.wikiwand.com/de/Eulersche_Zahl) $e$ (≈ 2,718) ist. Es kann aber auch der Logarithmus zu einer beliebigen Basis berechnet werden, solange die als zweites Argument in der Funktion angegeben wird:\n\n::: {layout-ncol=\"2\"}\n```{python}\n# Logarithmus zur Basis e\nmath.log(100)\n```\n\n```{python}\n# Logarithmus zur Basis 10\nmath.log(100, 10) \n```\n:::\n\nAnalog kann auch die Exponentialfunktion ($e^x$) berechnet werden, wobei $e$ wieder die Euler'sche Zahl ist. Schließlich kann auch die Quadratwurzel $\\sqrt(x)$ gezogen werden:\n\n::: {layout-ncol=\"2\"}\n```{python}\nmath.exp(10) \n```\n\n```{python}\nmath.sqrt(9)\n```\n:::\n\n# Zahlen runden\n\nIn Basis-Python gibt es eine `round()` Funktion, mit der Zahlen standardmäßig auf die nächste ganze Zahl gerundet werden können. Mit dem zweiten Argument der Funktion kann auch auf eine bestimmte Dezimalstelle gerundet werden:\n\n::: {layout-ncol=\"3\"}\n```{python}\n# keine Nachkommastelle\nround(123.456) \n```\n```{python}\n# zwei Nachkommastellen\nround(123.456, 2) \n```\n```{python}\n# auf die 10er-Stelle runden\nround(123.456, -1)\n```\n:::\n\nEs können auch `math.ceil` und `math.floor` verwendet werden, um auf- oder abzurunden.\n\n::: {layout-ncol=\"2\"}\n```{python}\n# Aufrunden\nmath.ceil(123.456)\n```\n\n```{python}\n# Abrunden\nmath.floor(123.456)\n```\n:::\n","srcMarkdownNoYaml":"\n\nPython ermöglicht alle grundlegenden mathematischen Berechnungen, die auch auf einem Taschenrechner durchgeführt werden können, mit einer Syntax, die einem z.B. durch Microsoft Excel zumindest teilweise geläufig ist.\n\n# Symbolische Operatoren\n\nDie Operatoren für Addition, Subtraktion, Multiplikation und Division sind erwartungsgemäß:\n\n::: {layout-ncol=\"4\"}\n```{python}\n10 + 3\n```\n\n```{python}\n10 - 3\n```\n\n```{python}\n10 * 3\n```\n\n```{python}\n10 / 3\n```\n:::\n\nFür die Potenzierung wird `**` genutzt:\n\n```{python}\n10 ** 3\n```\n\nMathematische Ausdrücke in Python folgen der normalen arithmetischen Reihenfolge der Operationen, also\n\n1.  `**`\n2.  `*` und `/`\n3.  `+` und `-`\n\nEs können aber Klammern eingesetzt werden um eine andere Reihenfolge zu erreichen:\n\n::: {layout-ncol=\"2\"}\n```{python}\n1 + 2 * 3 ** 2\n```\n\n```{python}\n((1 + 2) * 3) ** 2\n```\n:::\n\nDer Vollständigkeit halber soll erwähnt sein, dass es weitere, nicht so gängige Operatoren gibt. Beispielsweise wird mit `//` erst dividiert und dann der Quotient auf die nächste ganze Zahl abgerundet, sodass `10 // 3` = 3. Mit dem Modulus-Operator `%` hingegen wird der Rest, der bei der Division zweier Zahlen entsteht, zurückgegeben, sodass `10 % 4` = 2.\n\n# Mathematische Funktionen\n\nSelbstverständlich ist es auch möglich z.B. den Logarithmus einer Zahl zu berechnet. Allerdings gibt es dafür kein Symbol, sondern eine Funktion. Diese und andere Funktionen sind im Standardmodul `math` enthalten, sodass wir dieses zunächst laden müssen.\n\n```{python}\nimport math # Das math-Modul laden\n```\n\nStandardmäßig wird der natürliche Logarithmus von 100 berechnet, wobei die Basis des Logarithmus die [Euler'sche Zahl](https://www.wikiwand.com/de/Eulersche_Zahl) $e$ (≈ 2,718) ist. Es kann aber auch der Logarithmus zu einer beliebigen Basis berechnet werden, solange die als zweites Argument in der Funktion angegeben wird:\n\n::: {layout-ncol=\"2\"}\n```{python}\n# Logarithmus zur Basis e\nmath.log(100)\n```\n\n```{python}\n# Logarithmus zur Basis 10\nmath.log(100, 10) \n```\n:::\n\nAnalog kann auch die Exponentialfunktion ($e^x$) berechnet werden, wobei $e$ wieder die Euler'sche Zahl ist. Schließlich kann auch die Quadratwurzel $\\sqrt(x)$ gezogen werden:\n\n::: {layout-ncol=\"2\"}\n```{python}\nmath.exp(10) \n```\n\n```{python}\nmath.sqrt(9)\n```\n:::\n\n# Zahlen runden\n\nIn Basis-Python gibt es eine `round()` Funktion, mit der Zahlen standardmäßig auf die nächste ganze Zahl gerundet werden können. Mit dem zweiten Argument der Funktion kann auch auf eine bestimmte Dezimalstelle gerundet werden:\n\n::: {layout-ncol=\"3\"}\n```{python}\n# keine Nachkommastelle\nround(123.456) \n```\n```{python}\n# zwei Nachkommastellen\nround(123.456, 2) \n```\n```{python}\n# auf die 10er-Stelle runden\nround(123.456, -1)\n```\n:::\n\nEs können auch `math.ceil` und `math.floor` verwendet werden, um auf- oder abzurunden.\n\n::: {layout-ncol=\"2\"}\n```{python}\n# Aufrunden\nmath.ceil(123.456)\n```\n\n```{python}\n# Abrunden\nmath.floor(123.456)\n```\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"retina","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"01 kapitel.html"},"language":{"toc-title-document":"Inhaltsverzeichnis","toc-title-website":"Auf dieser Seite","related-formats-title":"Andere Formate","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Quelle","section-title-abstract":"Zusammenfassung","section-title-appendices":"Anhang","section-title-footnotes":"Fußnoten","section-title-references":"Literatur","section-title-reuse":"Wiederverwendung","section-title-copyright":"Urheberrechte","section-title-citation":"Zitat","appendix-attribution-cite-as":"Bitte zitieren Sie diese Arbeit als:","appendix-attribution-bibtex":"Mit BibTeX zitieren:","title-block-author-single":"Autor:in","title-block-author-plural":"Autor:innen","title-block-affiliation-single":"Zugehörigkeit","title-block-affiliation-plural":"Zugehörigkeiten","title-block-published":"Veröffentlichungsdatum","title-block-modified":"Geändert","callout-tip-title":"Tipp","callout-note-title":"Hinweis","callout-warning-title":"Warnung","callout-important-title":"Wichtig","callout-caution-title":"Vorsicht","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Gesamten Code zeigen","code-tools-hide-all-code":"Gesamten Code verbergen","code-tools-view-source":"Quellcode anzeigen","code-tools-source-code":"Quellcode","code-line":"Zeile","code-lines":"Zeilen","copy-button-tooltip":"In die Zwischenablage kopieren","copy-button-tooltip-success":"Kopiert","repo-action-links-edit":"Seite editieren","repo-action-links-source":"Quellcode anzeigen","repo-action-links-issue":"Problem melden","back-to-top":"Zurück nach oben","search-no-results-text":"Keine Treffer","search-matching-documents-text":"Treffer","search-copy-link-title":"Link in die Suche kopieren","search-hide-matches-text":"Zusätzliche Treffer verbergen","search-more-match-text":"weitere Treffer in diesem Dokument","search-more-matches-text":"weitere Treffer in diesem Dokument","search-clear-button-title":"Zurücksetzen","search-detached-cancel-button-title":"Abbrechen","search-submit-button-title":"Abschicken","search-label":"Suchen","toggle-section":"Abschnitt umschalten","toggle-sidebar":"Seitenleiste umschalten","toggle-dark-mode":"Dunkelmodus umschalten","toggle-reader-mode":"Lesemodus umschalten","toggle-navigation":"Navigation umschalten","crossref-fig-title":"Abbildung","crossref-tbl-title":"Tabelle","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Korollar","crossref-prp-title":"Aussage","crossref-cnj-title":"Annahme","crossref-def-title":"Definition","crossref-exm-title":"Beispiel","crossref-exr-title":"Übungsaufgabe","crossref-ch-prefix":"Kapitel","crossref-apx-prefix":"Anhang","crossref-sec-prefix":"Kapitel","crossref-eq-prefix":"Gleichung","crossref-lof-title":"Abbildungsverzeichnis","crossref-lot-title":"Tabellenverzeichnis","crossref-lol-title":"Listingverzeichnis","environment-proof-title":"Beweis","environment-remark-title":"Anmerkung","environment-solution-title":"Lösung","listing-page-order-by":"Sortieren nach","listing-page-order-by-default":"Voreinstellung","listing-page-order-by-date-asc":"Datum (aufsteigend)","listing-page-order-by-date-desc":"Neueste","listing-page-order-by-number-desc":"Absteigend","listing-page-order-by-number-asc":"Aufsteigend","listing-page-field-date":"Datum","listing-page-field-title":"Titel","listing-page-field-description":"Beschreibung","listing-page-field-author":"Autor:in","listing-page-field-filename":"Dateiname","listing-page-field-filemodified":"Geändert","listing-page-field-subtitle":"Untertitel","listing-page-field-readingtime":"Lesezeit","listing-page-field-categories":"Kategorien","listing-page-minutes-compact":"{0} min","listing-page-category-all":"alle","listing-page-no-matches":"Keine Treffer"},"metadata":{"lang":"de","fig-responsive":true,"quarto-version":"1.3.433","jupyter":"python3","author":[{"name":{"given":"Paul","family":"Schmidt","literal":"Paul Schmidt"},"orcid":"0000-0003-1528-2082","affiliations":[{"name":"BioMath GmbH","city":"Hamburg","country":"Germany","url":"https://www.biomath.de/"},{"name":"& Freelancer","url":"https://schmidtpaul.github.io/"}]}],"author-title":"Autor","abstract-title":"Zusammenfassung","date":"last-modified","published-title":"Zuletzt aktualisiert","citation":true,"_quarto-vars":{"author":"Andrew Heiss","instructor":{"name":"Dr. Paul Schmidt","name_no_title":"Paul Schmidt","email":"paul.schmidt@biomath.de","url":"https://schmidtpaul.github.io/"},"company":{"name":"BioMath GmbH","url":"www.biomath.de"}},"anchor-sections":true,"code-summary":"Click to show/hide code","code-copy":true,"citations-hover":true,"footnotes-hover":true,"theme":"../theme.scss","title":"Mathematische Operatoren & Funktionen"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}